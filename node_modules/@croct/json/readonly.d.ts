import { JsonPrimitive } from './mutable';
export declare type ReadonlyJsonObject = {
    readonly [key: string]: ReadonlyJsonValue;
};
export declare type ReadonlyJsonArray = readonly ReadonlyJsonValue[];
export declare type ReadonlyJsonStructure = ReadonlyJsonArray | ReadonlyJsonObject;
export declare type ReadonlyJsonValue = JsonPrimitive | ReadonlyJsonStructure;
export declare type ReadonlyJsonCompatibleObject = {
    readonly [key: string]: ReadonlyJsonCompatible;
};
export declare type ReadonlyJsonCompatibleArray = readonly ReadonlyJsonCompatible[];
export declare type ReadonlyJsonCompatibleStructure = ReadonlyJsonCompatibleArray | ReadonlyJsonCompatibleObject;
/**
 * A class that can be serialized to JSON.
 */
export declare type ReadonlyJsonConvertible = {
    toJSON(): ReadonlyJsonCompatible;
};
/**
 * Any value that can be safely serialized to JSON using `JSON.stringify()`.
 */
export declare type ReadonlyJsonCompatible = ReadonlyJsonValue | ReadonlyJsonConvertible | ReadonlyJsonCompatibleStructure;
