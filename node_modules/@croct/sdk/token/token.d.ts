export declare type Headers = {
    typ: string;
    alg: string;
    kid?: string;
    appId: string;
};
export declare type Claims = {
    iss: string;
    aud: string | string[];
    iat: number;
    exp?: number;
    sub?: string;
    jid?: string;
};
export declare class Token {
    private readonly headers;
    private readonly claims;
    private readonly signature;
    private constructor();
    static issue(appId: string, subject?: string | null, timestamp?: number): Token;
    static parse(token: string): Token;
    getHeaders(): Headers;
    getClaims(): Claims;
    getSignature(): string;
    isAnonymous(): boolean;
    getSubject(): string | null;
    getIssueTime(): number;
    toJSON(): string;
    toString(): string;
}
export interface TokenProvider {
    getToken(): Token | null;
}
export interface TokenStore extends TokenProvider {
    setToken(token: Token | null): void;
}
export declare class FixedTokenProvider implements TokenProvider {
    private readonly token;
    constructor(token: Token | null);
    getToken(): Token | null;
}
