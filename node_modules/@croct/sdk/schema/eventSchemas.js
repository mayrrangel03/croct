"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.eventOccurred = exports.linkOpened = exports.postViewed = exports.interestShown = exports.goalCompleted = exports.userSignedUp = exports.productViewed = exports.orderPlaced = exports.checkoutStarted = exports.cartViewed = exports.cartModified = void 0;
var validation_1 = require("../validation");
var ecommerceSchemas_1 = require("./ecommerceSchemas");
var userSchema_1 = require("./userSchema");
var contentSchemas_1 = require("./contentSchemas");
exports.cartModified = new validation_1.ObjectType({
    required: ['cart'],
    properties: {
        cart: ecommerceSchemas_1.cart,
    },
});
exports.cartViewed = new validation_1.ObjectType({
    required: ['cart'],
    properties: {
        cart: ecommerceSchemas_1.cart,
    },
});
exports.checkoutStarted = new validation_1.ObjectType({
    required: ['cart'],
    properties: {
        cart: ecommerceSchemas_1.cart,
        orderId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
    },
});
exports.orderPlaced = new validation_1.ObjectType({
    required: ['order'],
    properties: {
        order: ecommerceSchemas_1.order,
    },
});
exports.productViewed = new validation_1.ObjectType({
    required: ['product'],
    properties: {
        product: ecommerceSchemas_1.productDetails,
    },
});
exports.userSignedUp = new validation_1.ObjectType({
    required: ['userId'],
    properties: {
        userId: new validation_1.StringType({
            minLength: 1,
            maxLength: 254,
        }),
        profile: userSchema_1.userProfileSchema,
    },
});
exports.goalCompleted = new validation_1.ObjectType({
    required: ['goalId'],
    properties: {
        goalId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        value: new validation_1.NumberType({
            minimum: 0,
        }),
        currency: new validation_1.StringType({
            minLength: 1,
            maxLength: 10,
        }),
    },
});
exports.interestShown = new validation_1.ObjectType({
    required: ['interests'],
    properties: {
        interests: new validation_1.ArrayType({
            items: new validation_1.StringType({
                minLength: 1,
                maxLength: 50,
            }),
            minItems: 1,
            maxItems: 10,
        }),
    },
});
exports.postViewed = new validation_1.ObjectType({
    required: ['post'],
    properties: {
        post: contentSchemas_1.postDetails,
    },
});
exports.linkOpened = new validation_1.ObjectType({
    required: ['link'],
    properties: {
        link: new validation_1.StringType({
            format: 'uri-reference',
        }),
    },
});
exports.eventOccurred = new validation_1.ObjectType({
    required: ['name'],
    properties: {
        name: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        testId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        groupId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        personalizationId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        audience: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        details: new validation_1.ObjectType({
            additionalProperties: new validation_1.UnionType(new validation_1.NullType(), new validation_1.BooleanType(), new validation_1.NumberType(), new validation_1.StringType({
                maxLength: 300,
            })),
            propertyNames: new validation_1.StringType({
                minLength: 1,
                maxLength: 20,
                format: 'identifier',
            }),
            maxProperties: 10,
        }),
    },
});
