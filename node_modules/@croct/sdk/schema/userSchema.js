"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userProfileSchema = void 0;
var validation_1 = require("../validation");
var attributeSchema_1 = require("./attributeSchema");
exports.userProfileSchema = new validation_1.ObjectType({
    properties: {
        firstName: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        lastName: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        birthDate: new validation_1.StringType({
            format: 'date',
        }),
        gender: new validation_1.StringType({
            enumeration: ['male', 'female', 'neutral', 'unknown'],
        }),
        email: new validation_1.StringType({
            minLength: 1,
            maxLength: 254,
        }),
        alternateEmail: new validation_1.StringType({
            minLength: 1,
            maxLength: 254,
        }),
        phone: new validation_1.StringType({
            minLength: 1,
            maxLength: 30,
        }),
        alternatePhone: new validation_1.StringType({
            minLength: 1,
            maxLength: 30,
        }),
        address: new validation_1.ObjectType({
            properties: {
                street: new validation_1.StringType({
                    minLength: 1,
                    maxLength: 100,
                }),
                district: new validation_1.StringType({
                    minLength: 1,
                    maxLength: 100,
                }),
                city: new validation_1.StringType({
                    minLength: 1,
                    maxLength: 100,
                }),
                region: new validation_1.StringType({
                    minLength: 1,
                    maxLength: 100,
                }),
                country: new validation_1.StringType({
                    minLength: 1,
                    maxLength: 100,
                }),
                postalCode: new validation_1.StringType({
                    minLength: 1,
                    maxLength: 20,
                }),
            },
        }),
        avatar: new validation_1.StringType({
            maxLength: 500,
            format: 'url',
        }),
        company: new validation_1.StringType({
            minLength: 1,
            maxLength: 200,
        }),
        companyUrl: new validation_1.StringType({
            maxLength: 200,
            format: 'url',
        }),
        jobTitle: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        interests: new validation_1.ArrayType({
            maxItems: 30,
            items: new validation_1.StringType({
                minLength: 1,
                maxLength: 30,
            }),
        }),
        activities: new validation_1.ArrayType({
            maxItems: 30,
            items: new validation_1.StringType({
                minLength: 1,
                maxLength: 30,
            }),
        }),
        custom: new validation_1.ObjectType({
            propertyNames: attributeSchema_1.attributeNameSchema,
            maxProperties: 10,
            additionalProperties: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                maxLength: 100,
            }), new validation_1.ArrayType({
                maxItems: 10,
                items: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                    maxLength: 100,
                }), new validation_1.ArrayType({
                    maxItems: 10,
                    items: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                        maxLength: 100,
                    })),
                }), new validation_1.ObjectType({
                    propertyNames: attributeSchema_1.attributeNameSchema,
                    maxProperties: 10,
                    additionalProperties: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                        maxLength: 100,
                    })),
                })),
            }), new validation_1.ObjectType({
                propertyNames: attributeSchema_1.attributeNameSchema,
                maxProperties: 10,
                additionalProperties: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                    maxLength: 100,
                }), new validation_1.ArrayType({
                    maxItems: 10,
                    items: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                        maxLength: 100,
                    })),
                }), new validation_1.ObjectType({
                    propertyNames: attributeSchema_1.attributeNameSchema,
                    maxProperties: 10,
                    additionalProperties: new validation_1.UnionType(new validation_1.BooleanType(), new validation_1.NullType(), new validation_1.NumberType(), new validation_1.StringType({
                        maxLength: 100,
                    })),
                })),
            })),
        }),
    },
});
