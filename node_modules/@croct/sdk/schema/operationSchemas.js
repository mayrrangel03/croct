"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeOperation = exports.unsetOperation = exports.clearOperation = exports.incrementOperation = exports.decrementOperation = exports.mergeOperation = exports.combineOperation = exports.setOperation = exports.addOperation = void 0;
var validation_1 = require("../validation");
var attributeSchema_1 = require("./attributeSchema");
var pointer = new validation_1.StringType({
    format: 'pointer',
});
var simpleArray = new validation_1.JsonArrayType({
    items: new validation_1.JsonPrimitiveType(),
});
var simpleMap = new validation_1.JsonObjectType({
    properties: new validation_1.JsonPrimitiveType(),
    propertyNames: attributeSchema_1.attributeNameSchema,
});
var complexMap = new validation_1.JsonObjectType({
    properties: new validation_1.UnionType(new validation_1.JsonPrimitiveType(), simpleArray, simpleMap),
    propertyNames: attributeSchema_1.attributeNameSchema,
});
var collectionValue = new validation_1.UnionType(simpleArray, complexMap);
var mixedValue = new validation_1.UnionType(new validation_1.JsonPrimitiveType(), simpleArray, complexMap);
exports.addOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: mixedValue,
    },
});
exports.setOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: mixedValue,
    },
});
exports.combineOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: mixedValue,
    },
});
exports.mergeOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: collectionValue,
    },
});
exports.decrementOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: new validation_1.NumberType(),
    },
});
exports.incrementOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: new validation_1.NumberType(),
    },
});
exports.clearOperation = new validation_1.ObjectType({
    required: ['path'],
    properties: {
        path: pointer,
    },
});
exports.unsetOperation = new validation_1.ObjectType({
    required: ['path'],
    properties: {
        path: pointer,
    },
});
exports.removeOperation = new validation_1.ObjectType({
    required: ['path', 'value'],
    properties: {
        path: pointer,
        value: mixedValue,
    },
});
