"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.order = exports.orderItem = exports.cart = exports.cartItem = exports.productDetails = void 0;
var validation_1 = require("../validation");
exports.productDetails = new validation_1.ObjectType({
    required: ['productId', 'name', 'displayPrice'],
    properties: {
        productId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        sku: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        name: new validation_1.StringType({
            minLength: 1,
            maxLength: 200,
        }),
        category: new validation_1.StringType({
            minLength: 1,
            maxLength: 100,
        }),
        brand: new validation_1.StringType({
            minLength: 1,
            maxLength: 100,
        }),
        variant: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        displayPrice: new validation_1.NumberType({
            minimum: 0,
        }),
        originalPrice: new validation_1.NumberType({
            minimum: 0,
        }),
        url: new validation_1.StringType({
            format: 'url',
        }),
        imageUrl: new validation_1.StringType({
            format: 'url',
        }),
    },
});
exports.cartItem = new validation_1.ObjectType({
    required: ['index', 'product', 'quantity', 'total'],
    properties: {
        index: new validation_1.NumberType({
            minimum: 0,
        }),
        product: exports.productDetails,
        quantity: new validation_1.NumberType({
            minimum: 1,
        }),
        total: new validation_1.NumberType({
            minimum: 0,
        }),
        discount: new validation_1.NumberType({
            minimum: 0,
        }),
        coupon: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
    },
});
exports.cart = new validation_1.ObjectType({
    required: ['currency', 'items', 'total'],
    properties: {
        currency: new validation_1.StringType({
            maxLength: 10,
            minLength: 1,
        }),
        items: new validation_1.ArrayType({
            items: exports.cartItem,
        }),
        subtotal: new validation_1.NumberType({
            minimum: 0,
        }),
        shippingPrice: new validation_1.NumberType({
            minimum: 0,
        }),
        taxes: new validation_1.ObjectType({
            additionalProperties: new validation_1.NumberType(),
            minProperties: 1,
        }),
        costs: new validation_1.ObjectType({
            additionalProperties: new validation_1.NumberType(),
            minProperties: 1,
        }),
        discount: new validation_1.NumberType({
            minimum: 0,
        }),
        total: new validation_1.NumberType({
            minimum: 0,
        }),
        coupon: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        lastUpdateTime: new validation_1.NumberType(),
    },
});
exports.orderItem = new validation_1.ObjectType({
    required: ['index', 'product', 'quantity', 'total'],
    properties: {
        index: new validation_1.NumberType({
            minimum: 0,
        }),
        product: exports.productDetails,
        quantity: new validation_1.NumberType({
            minimum: 1,
        }),
        total: new validation_1.NumberType({
            minimum: 0,
        }),
        discount: new validation_1.NumberType({
            minimum: 0,
        }),
        coupon: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
    },
});
exports.order = new validation_1.ObjectType({
    required: ['orderId', 'currency', 'items', 'total'],
    properties: {
        orderId: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        currency: new validation_1.StringType({
            maxLength: 10,
            minLength: 1,
        }),
        items: new validation_1.ArrayType({
            items: exports.orderItem,
            minItems: 1,
        }),
        subtotal: new validation_1.NumberType({
            minimum: 0,
        }),
        shippingPrice: new validation_1.NumberType({
            minimum: 0,
        }),
        taxes: new validation_1.ObjectType({
            additionalProperties: new validation_1.NumberType(),
            minProperties: 1,
        }),
        costs: new validation_1.ObjectType({
            additionalProperties: new validation_1.NumberType(),
            minProperties: 1,
        }),
        discount: new validation_1.NumberType({
            minimum: 0,
        }),
        total: new validation_1.NumberType({
            minimum: 0,
        }),
        coupon: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        paymentMethod: new validation_1.StringType({
            minLength: 1,
            maxLength: 50,
        }),
        installments: new validation_1.NumberType({
            minimum: 1,
        }),
        status: new validation_1.StringType({
            enumeration: ['placed', 'paid', 'complete'],
        }),
    },
});
