"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PersistentQueue = void 0;
var PersistentQueue = /** @class */ (function () {
    function PersistentQueue(storage, key) {
        if (key === void 0) { key = 'queue'; }
        this.storage = storage;
        this.key = key;
    }
    PersistentQueue.prototype.all = function () {
        return this.queue.slice();
    };
    PersistentQueue.prototype.getCapacity = function () {
        return Infinity;
    };
    PersistentQueue.prototype.isEmpty = function () {
        return this.length() === 0;
    };
    PersistentQueue.prototype.length = function () {
        return this.queue.length;
    };
    PersistentQueue.prototype.push = function (value) {
        this.queue.push(value);
        this.flush();
    };
    PersistentQueue.prototype.peek = function () {
        var item = this.queue[0];
        if (item === undefined) {
            return null;
        }
        return item;
    };
    PersistentQueue.prototype.shift = function () {
        var value = this.queue.shift();
        if (!value) {
            throw new Error('The queue is empty.');
        }
        this.flush();
        return value;
    };
    Object.defineProperty(PersistentQueue.prototype, "queue", {
        get: function () {
            if (!this.cache) {
                this.cache = this.load();
            }
            return this.cache;
        },
        enumerable: false,
        configurable: true
    });
    PersistentQueue.prototype.flush = function () {
        this.storage.setItem(this.key, JSON.stringify(this.cache || []));
    };
    PersistentQueue.prototype.load = function () {
        var data = this.storage.getItem(this.key);
        if (data === null) {
            return [];
        }
        try {
            return JSON.parse(data);
        }
        catch (error) {
            return [];
        }
    };
    return PersistentQueue;
}());
exports.PersistentQueue = PersistentQueue;
