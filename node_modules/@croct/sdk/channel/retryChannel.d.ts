import { OutputChannel } from './channel';
import { Logger } from '../logging';
import { RetryPolicy } from '../retry';
declare type Configuration<T> = {
    channel: OutputChannel<T>;
    retryPolicy: RetryPolicy<T>;
    logger?: Logger;
};
export declare class RetryChannel<T> implements OutputChannel<T> {
    private readonly channel;
    private readonly retryPolicy;
    private readonly logger;
    private closed;
    constructor({ channel, retryPolicy, logger }: Configuration<T>);
    publish(message: T): Promise<void>;
    retry(message: T, error: unknown): Promise<void>;
    close(): Promise<void>;
}
export {};
