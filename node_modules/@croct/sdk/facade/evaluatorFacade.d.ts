import { JsonObject, JsonValue } from '@croct/json';
import { Evaluator, EvaluationContext } from '../evaluator';
import { Tab } from '../tab';
export declare type EvaluationOptions = {
    timeout?: number;
    attributes?: JsonObject;
};
export interface ContextFactory {
    createContext(attributes?: JsonObject): EvaluationContext;
}
export declare class EvaluatorFacade {
    private readonly evaluator;
    private readonly contextFactory;
    constructor(evaluator: Evaluator, contextFactory: ContextFactory);
    evaluate(expression: string, options?: EvaluationOptions): Promise<JsonValue>;
}
export declare class MinimalContextFactory implements ContextFactory {
    createContext(attributes?: JsonObject): EvaluationContext;
}
export declare class TabContextFactory implements ContextFactory {
    private readonly tab;
    constructor(tab: Tab);
    createContext(attributes?: JsonObject): EvaluationContext;
    private static createCampaign;
}
