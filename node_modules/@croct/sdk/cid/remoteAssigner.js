"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteAssigner = void 0;
var tslib_1 = require("tslib");
var logging_1 = require("../logging");
var error_1 = require("../error");
var RemoteAssigner = /** @class */ (function () {
    function RemoteAssigner(endpoint, logger) {
        this.endpoint = endpoint;
        this.logger = logger !== null && logger !== void 0 ? logger : new logging_1.NullLogger();
    }
    RemoteAssigner.prototype.assignCid = function () {
        var _this = this;
        if (this.pending === undefined) {
            this.pending = this.fetchCid().finally(function () {
                _this.pending = undefined;
            });
        }
        return this.pending;
    };
    RemoteAssigner.prototype.fetchCid = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var options, response, error;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        options = {
                            method: 'GET',
                            credentials: 'include',
                        };
                        return [4 /*yield*/, window.fetch(this.endpoint, options)];
                    case 1:
                        response = _a.sent();
                        if (!response.ok) {
                            error = new Error("Failed to assign CID: ".concat((0, error_1.formatCause)(response.statusText)));
                            this.logger.error(error.message);
                            throw error;
                        }
                        this.logger.debug('New CID successfully assigned');
                        return [2 /*return*/, response.text()];
                }
            });
        });
    };
    return RemoteAssigner;
}());
exports.RemoteAssigner = RemoteAssigner;
