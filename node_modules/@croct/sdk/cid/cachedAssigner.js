"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CachedAssigner = void 0;
var tslib_1 = require("tslib");
var logging_1 = require("../logging");
var CachedAssigner = /** @class */ (function () {
    function CachedAssigner(assigner, cache, logger) {
        this.assigner = assigner;
        this.cache = cache;
        this.logger = logger !== null && logger !== void 0 ? logger : new logging_1.NullLogger();
    }
    CachedAssigner.prototype.assignCid = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var cid, newCid;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        cid = this.cache.get();
                        if (cid !== null) {
                            this.logger.debug('Previous CID loaded from cache');
                            return [2 /*return*/, cid];
                        }
                        return [4 /*yield*/, this.assigner.assignCid()];
                    case 1:
                        newCid = _a.sent();
                        this.cache.put(newCid);
                        this.logger.debug('New CID stored into cache');
                        return [2 /*return*/, newCid];
                }
            });
        });
    };
    return CachedAssigner;
}());
exports.CachedAssigner = CachedAssigner;
