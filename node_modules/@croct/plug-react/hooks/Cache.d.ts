export declare type EntryLoader<R> = (...args: any) => Promise<R>;
export declare type EntryOptions<R> = {
    cacheKey: string;
    loader: EntryLoader<R>;
    fallback?: R;
    expiration?: number;
};
declare type Entry<R = any> = {
    promise: Promise<any>;
    result?: R;
    dispose: () => void;
    timeout?: number;
    error?: any;
};
export declare class Cache {
    private readonly cache;
    private readonly defaultExpiration;
    constructor(defaultExpiration: number);
    load<R>(configuration: EntryOptions<R>): R;
    get<R>(cacheKey: string): Entry<R> | undefined;
}
export {};
