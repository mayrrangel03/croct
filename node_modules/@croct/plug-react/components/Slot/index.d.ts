import { ReactChild, ReactElement } from 'react';
import { SlotContent, SlotId, SlotMap } from '@croct/plug/fetch';
import { NullableJsonObject } from '@croct/plug/sdk/json';
import { UseContentOptions } from '../../hooks';
declare type Renderer<P> = (props: P) => ReactChild;
export declare type SlotProps<P, I = P, F = P, S extends SlotId = SlotId> = UseContentOptions<I, F> & {
    id: S;
    children: Renderer<P | I | F>;
};
declare type SlotComponent = {
    <P, I, F>(props: Extract<P | I | F, NullableJsonObject> extends never ? SlotProps<NullableJsonObject, never, never, keyof SlotMap extends never ? string : never> : SlotProps<P, I, F, keyof SlotMap extends never ? string : never>): ReactElement;
    <S extends keyof SlotMap>(props: SlotProps<SlotContent<S>, never, never, S>): ReactElement;
    <I, S extends keyof SlotMap>(props: SlotProps<SlotContent<S>, I, never, S>): ReactElement;
    <F, S extends keyof SlotMap>(props: SlotProps<SlotContent<S>, never, F, S>): ReactElement;
    <I, F, S extends keyof SlotMap>(props: SlotProps<SlotContent<S>, I, F, S>): ReactElement;
    (props: SlotProps<void, void, void>): ReactElement;
};
export declare const Slot: SlotComponent;
export {};
