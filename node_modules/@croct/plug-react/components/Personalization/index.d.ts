import { ReactChild, ReactElement } from 'react';
import { JsonValue } from '@croct/plug/sdk/json';
import { UseEvaluationOptions } from '../../hooks';
declare type Renderer<T> = (result: T) => ReactChild;
export declare type PersonalizationProps<T extends JsonValue = JsonValue, I = T, F = T> = UseEvaluationOptions<I, F> & {
    expression: string;
    children: Renderer<T | I | F>;
};
export declare function Personalization<T extends JsonValue, I, F>(props: Extract<T | I | F, JsonValue> extends never ? PersonalizationProps : PersonalizationProps<T, I, F>): ReactElement;
export {};
