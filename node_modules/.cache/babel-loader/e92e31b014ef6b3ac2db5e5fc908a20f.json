{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoteAssigner = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar logging_1 = require(\"../logging\");\n\nvar error_1 = require(\"../error\");\n\nvar RemoteAssigner =\n/** @class */\nfunction () {\n  function RemoteAssigner(endpoint, logger) {\n    this.endpoint = endpoint;\n    this.logger = logger !== null && logger !== void 0 ? logger : new logging_1.NullLogger();\n  }\n\n  RemoteAssigner.prototype.assignCid = function () {\n    var _this = this;\n\n    if (this.pending === undefined) {\n      this.pending = this.fetchCid().finally(function () {\n        _this.pending = undefined;\n      });\n    }\n\n    return this.pending;\n  };\n\n  RemoteAssigner.prototype.fetchCid = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var options, response, error;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            options = {\n              method: 'GET',\n              credentials: 'include'\n            };\n            return [4\n            /*yield*/\n            , window.fetch(this.endpoint, options)];\n\n          case 1:\n            response = _a.sent();\n\n            if (!response.ok) {\n              error = new Error(\"Failed to assign CID: \".concat((0, error_1.formatCause)(response.statusText)));\n              this.logger.error(error.message);\n              throw error;\n            }\n\n            this.logger.debug('New CID successfully assigned');\n            return [2\n            /*return*/\n            , response.text()];\n        }\n      });\n    });\n  };\n\n  return RemoteAssigner;\n}();\n\nexports.RemoteAssigner = RemoteAssigner;","map":{"version":3,"names":["Object","defineProperty","exports","value","RemoteAssigner","tslib_1","require","logging_1","error_1","endpoint","logger","NullLogger","prototype","assignCid","_this","pending","undefined","fetchCid","finally","__awaiter","options","response","error","__generator","_a","label","method","credentials","window","fetch","sent","ok","Error","concat","formatCause","statusText","message","debug","text"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/cid/remoteAssigner.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteAssigner = void 0;\nvar tslib_1 = require(\"tslib\");\nvar logging_1 = require(\"../logging\");\nvar error_1 = require(\"../error\");\nvar RemoteAssigner = /** @class */ (function () {\n    function RemoteAssigner(endpoint, logger) {\n        this.endpoint = endpoint;\n        this.logger = logger !== null && logger !== void 0 ? logger : new logging_1.NullLogger();\n    }\n    RemoteAssigner.prototype.assignCid = function () {\n        var _this = this;\n        if (this.pending === undefined) {\n            this.pending = this.fetchCid().finally(function () {\n                _this.pending = undefined;\n            });\n        }\n        return this.pending;\n    };\n    RemoteAssigner.prototype.fetchCid = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var options, response, error;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        options = {\n                            method: 'GET',\n                            credentials: 'include',\n                        };\n                        return [4 /*yield*/, window.fetch(this.endpoint, options)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) {\n                            error = new Error(\"Failed to assign CID: \".concat((0, error_1.formatCause)(response.statusText)));\n                            this.logger.error(error.message);\n                            throw error;\n                        }\n                        this.logger.debug('New CID successfully assigned');\n                        return [2 /*return*/, response.text()];\n                }\n            });\n        });\n    };\n    return RemoteAssigner;\n}());\nexports.RemoteAssigner = RemoteAssigner;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIF,cAAc;AAAG;AAAe,YAAY;EAC5C,SAASA,cAAT,CAAwBK,QAAxB,EAAkCC,MAAlC,EAA0C;IACtC,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAKC,MAAL,GAAcA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,IAAIH,SAAS,CAACI,UAAd,EAA9D;EACH;;EACDP,cAAc,CAACQ,SAAf,CAAyBC,SAAzB,GAAqC,YAAY;IAC7C,IAAIC,KAAK,GAAG,IAAZ;;IACA,IAAI,KAAKC,OAAL,KAAiBC,SAArB,EAAgC;MAC5B,KAAKD,OAAL,GAAe,KAAKE,QAAL,GAAgBC,OAAhB,CAAwB,YAAY;QAC/CJ,KAAK,CAACC,OAAN,GAAgBC,SAAhB;MACH,CAFc,CAAf;IAGH;;IACD,OAAO,KAAKD,OAAZ;EACH,CARD;;EASAX,cAAc,CAACQ,SAAf,CAAyBK,QAAzB,GAAoC,YAAY;IAC5C,OAAOZ,OAAO,CAACc,SAAR,CAAkB,IAAlB,EAAwB,KAAK,CAA7B,EAAgC,KAAK,CAArC,EAAwC,YAAY;MACvD,IAAIC,OAAJ,EAAaC,QAAb,EAAuBC,KAAvB;MACA,OAAOjB,OAAO,CAACkB,WAAR,CAAoB,IAApB,EAA0B,UAAUC,EAAV,EAAc;QAC3C,QAAQA,EAAE,CAACC,KAAX;UACI,KAAK,CAAL;YACIL,OAAO,GAAG;cACNM,MAAM,EAAE,KADF;cAENC,WAAW,EAAE;YAFP,CAAV;YAIA,OAAO,CAAC;YAAE;YAAH,EAAcC,MAAM,CAACC,KAAP,CAAa,KAAKpB,QAAlB,EAA4BW,OAA5B,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIC,QAAQ,GAAGG,EAAE,CAACM,IAAH,EAAX;;YACA,IAAI,CAACT,QAAQ,CAACU,EAAd,EAAkB;cACdT,KAAK,GAAG,IAAIU,KAAJ,CAAU,yBAAyBC,MAAzB,CAAgC,CAAC,GAAGzB,OAAO,CAAC0B,WAAZ,EAAyBb,QAAQ,CAACc,UAAlC,CAAhC,CAAV,CAAR;cACA,KAAKzB,MAAL,CAAYY,KAAZ,CAAkBA,KAAK,CAACc,OAAxB;cACA,MAAMd,KAAN;YACH;;YACD,KAAKZ,MAAL,CAAY2B,KAAZ,CAAkB,+BAAlB;YACA,OAAO,CAAC;YAAE;YAAH,EAAehB,QAAQ,CAACiB,IAAT,EAAf,CAAP;QAfR;MAiBH,CAlBM,CAAP;IAmBH,CArBM,CAAP;EAsBH,CAvBD;;EAwBA,OAAOlC,cAAP;AACH,CAvCmC,EAApC;;AAwCAF,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}