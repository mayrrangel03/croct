{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SocketChannel = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar logging_1 = require(\"../logging\");\n\nvar error_1 = require(\"../error\");\n\nvar SocketChannel =\n/** @class */\nfunction () {\n  function SocketChannel(_a) {\n    var _b, _c, _d;\n\n    var url = _a.url,\n        logger = _a.logger,\n        options = tslib_1.__rest(_a, [\"url\", \"logger\"]);\n\n    this.listeners = [];\n    this.closed = false;\n    this.url = url;\n    this.logger = logger !== null && logger !== void 0 ? logger : new logging_1.NullLogger();\n    this.options = tslib_1.__assign(tslib_1.__assign({}, options), {\n      closeTimeout: (_b = options.closeTimeout) !== null && _b !== void 0 ? _b : 5000,\n      connectionTimeout: (_c = options.connectionTimeout) !== null && _c !== void 0 ? _c : 10000,\n      protocols: (_d = options.protocols) !== null && _d !== void 0 ? _d : []\n    });\n  }\n\n  Object.defineProperty(SocketChannel.prototype, \"connected\", {\n    get: function () {\n      if (this.connection === undefined) {\n        return Promise.resolve(false);\n      }\n\n      return this.connection.then(function () {\n        return true;\n      }, function () {\n        return false;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SocketChannel.prototype.publish = function (message) {\n    var _this = this;\n\n    return this.connect().then(function (socket) {\n      socket.send(message);\n\n      _this.logger.debug('Message sent.');\n    });\n  };\n\n  SocketChannel.prototype.subscribe = function (listener) {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  };\n\n  SocketChannel.prototype.unsubscribe = function (listener) {\n    var index = this.listeners.indexOf(listener);\n\n    if (index >= 0) {\n      this.listeners.splice(index, 1);\n    }\n  };\n\n  SocketChannel.prototype.notify = function (message) {\n    this.listeners.forEach(function (dispatch) {\n      return dispatch(message);\n    });\n  };\n\n  SocketChannel.prototype.connect = function () {\n    var _this = this;\n\n    if (this.closed) {\n      return Promise.reject(new Error('Channel has been closed.'));\n    }\n\n    if (this.connection !== undefined) {\n      return this.connection.then(function (connection) {\n        var state = connection.readyState;\n\n        if (state === WebSocket.OPEN) {\n          return connection;\n        }\n\n        throw new Error('Connection lost.');\n      }).catch(function () {\n        // Reconnect\n        delete _this.connection;\n        return _this.connect();\n      });\n    }\n\n    this.connection = new Promise(function (resolve, reject) {\n      _this.logger.debug('Connecting...');\n\n      var connection = new window.WebSocket(_this.url, _this.options.protocols);\n\n      if (_this.options.binaryType) {\n        connection.binaryType = _this.options.binaryType;\n      }\n\n      var abortListener = function () {\n        var reason = 'Maximum connection timeout reached.';\n\n        _this.logger.error(reason);\n\n        reject(new Error(reason));\n        connection.close(1000, reason);\n      };\n\n      var abortTimer = window.setTimeout(abortListener, _this.options.connectionTimeout);\n\n      var openListener = function () {\n        window.clearTimeout(abortTimer);\n\n        _this.logger.info('Connection established.');\n\n        connection.removeEventListener('open', openListener);\n        resolve(connection);\n      };\n\n      var errorListener = function () {\n        if (!_this.closed) {\n          _this.logger.error('Connection error.');\n        }\n      };\n\n      var messageListener = function (event) {\n        _this.logger.debug('Message received.');\n\n        _this.notify(event.data);\n      };\n\n      var closeListener = function (event) {\n        window.clearTimeout(abortTimer);\n        var reason = \"\".concat((0, error_1.formatCause)(event.reason || 'unknown'), \" (code \").concat(event.code, \")\");\n        var message = \"Connection has been closed, reason: \".concat(reason);\n\n        if (!_this.closed) {\n          _this.logger.info(message);\n        }\n\n        connection.removeEventListener('open', openListener);\n        connection.removeEventListener('error', errorListener);\n        connection.removeEventListener('close', closeListener);\n        connection.removeEventListener('message', messageListener);\n        reject(new Error(message));\n      };\n\n      connection.addEventListener('open', openListener, {\n        once: true\n      });\n      connection.addEventListener('close', closeListener, {\n        once: true\n      });\n      connection.addEventListener('error', errorListener);\n      connection.addEventListener('message', messageListener);\n    });\n    return this.connection;\n  };\n\n  SocketChannel.prototype.close = function () {\n    var _this = this;\n\n    this.logger.debug('Closing connection...');\n    return new Promise(function (resolve, reject) {\n      _this.closed = true;\n\n      if (_this.connection === undefined) {\n        _this.logger.debug('Connection is not open.');\n\n        resolve();\n        return;\n      }\n\n      _this.connection.then(function (connection) {\n        var abortTimer;\n\n        var abort = function () {\n          _this.logger.warn('Connection could not be closed within the timeout period.');\n\n          reject(new Error('Maximum close timeout reached.'));\n        };\n\n        var close = function () {\n          window.clearTimeout(abortTimer);\n\n          _this.logger.info('Connection gracefully closed.');\n\n          resolve();\n        };\n\n        connection.addEventListener('close', close, {\n          once: true\n        });\n        connection.close(1000, 'Deliberate disconnection.');\n        abortTimer = window.setTimeout(abort, _this.options.closeTimeout);\n      }, function () {\n        _this.logger.info('Connection closed.');\n\n        resolve();\n      });\n    });\n  };\n\n  return SocketChannel;\n}();\n\nexports.SocketChannel = SocketChannel;","map":{"version":3,"names":["Object","defineProperty","exports","value","SocketChannel","tslib_1","require","logging_1","error_1","_a","_b","_c","_d","url","logger","options","__rest","listeners","closed","NullLogger","__assign","closeTimeout","connectionTimeout","protocols","prototype","get","connection","undefined","Promise","resolve","then","enumerable","configurable","publish","message","_this","connect","socket","send","debug","subscribe","listener","includes","push","unsubscribe","index","indexOf","splice","notify","forEach","dispatch","reject","Error","state","readyState","WebSocket","OPEN","catch","window","binaryType","abortListener","reason","error","close","abortTimer","setTimeout","openListener","clearTimeout","info","removeEventListener","errorListener","messageListener","event","data","closeListener","concat","formatCause","code","addEventListener","once","abort","warn"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/channel/socketChannel.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SocketChannel = void 0;\nvar tslib_1 = require(\"tslib\");\nvar logging_1 = require(\"../logging\");\nvar error_1 = require(\"../error\");\nvar SocketChannel = /** @class */ (function () {\n    function SocketChannel(_a) {\n        var _b, _c, _d;\n        var url = _a.url, logger = _a.logger, options = tslib_1.__rest(_a, [\"url\", \"logger\"]);\n        this.listeners = [];\n        this.closed = false;\n        this.url = url;\n        this.logger = logger !== null && logger !== void 0 ? logger : new logging_1.NullLogger();\n        this.options = tslib_1.__assign(tslib_1.__assign({}, options), { closeTimeout: (_b = options.closeTimeout) !== null && _b !== void 0 ? _b : 5000, connectionTimeout: (_c = options.connectionTimeout) !== null && _c !== void 0 ? _c : 10000, protocols: (_d = options.protocols) !== null && _d !== void 0 ? _d : [] });\n    }\n    Object.defineProperty(SocketChannel.prototype, \"connected\", {\n        get: function () {\n            if (this.connection === undefined) {\n                return Promise.resolve(false);\n            }\n            return this.connection.then(function () { return true; }, function () { return false; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SocketChannel.prototype.publish = function (message) {\n        var _this = this;\n        return this.connect().then(function (socket) {\n            socket.send(message);\n            _this.logger.debug('Message sent.');\n        });\n    };\n    SocketChannel.prototype.subscribe = function (listener) {\n        if (!this.listeners.includes(listener)) {\n            this.listeners.push(listener);\n        }\n    };\n    SocketChannel.prototype.unsubscribe = function (listener) {\n        var index = this.listeners.indexOf(listener);\n        if (index >= 0) {\n            this.listeners.splice(index, 1);\n        }\n    };\n    SocketChannel.prototype.notify = function (message) {\n        this.listeners.forEach(function (dispatch) { return dispatch(message); });\n    };\n    SocketChannel.prototype.connect = function () {\n        var _this = this;\n        if (this.closed) {\n            return Promise.reject(new Error('Channel has been closed.'));\n        }\n        if (this.connection !== undefined) {\n            return this.connection.then(function (connection) {\n                var state = connection.readyState;\n                if (state === WebSocket.OPEN) {\n                    return connection;\n                }\n                throw new Error('Connection lost.');\n            }).catch(function () {\n                // Reconnect\n                delete _this.connection;\n                return _this.connect();\n            });\n        }\n        this.connection = new Promise(function (resolve, reject) {\n            _this.logger.debug('Connecting...');\n            var connection = new window.WebSocket(_this.url, _this.options.protocols);\n            if (_this.options.binaryType) {\n                connection.binaryType = _this.options.binaryType;\n            }\n            var abortListener = function () {\n                var reason = 'Maximum connection timeout reached.';\n                _this.logger.error(reason);\n                reject(new Error(reason));\n                connection.close(1000, reason);\n            };\n            var abortTimer = window.setTimeout(abortListener, _this.options.connectionTimeout);\n            var openListener = function () {\n                window.clearTimeout(abortTimer);\n                _this.logger.info('Connection established.');\n                connection.removeEventListener('open', openListener);\n                resolve(connection);\n            };\n            var errorListener = function () {\n                if (!_this.closed) {\n                    _this.logger.error('Connection error.');\n                }\n            };\n            var messageListener = function (event) {\n                _this.logger.debug('Message received.');\n                _this.notify(event.data);\n            };\n            var closeListener = function (event) {\n                window.clearTimeout(abortTimer);\n                var reason = \"\".concat((0, error_1.formatCause)(event.reason || 'unknown'), \" (code \").concat(event.code, \")\");\n                var message = \"Connection has been closed, reason: \".concat(reason);\n                if (!_this.closed) {\n                    _this.logger.info(message);\n                }\n                connection.removeEventListener('open', openListener);\n                connection.removeEventListener('error', errorListener);\n                connection.removeEventListener('close', closeListener);\n                connection.removeEventListener('message', messageListener);\n                reject(new Error(message));\n            };\n            connection.addEventListener('open', openListener, { once: true });\n            connection.addEventListener('close', closeListener, { once: true });\n            connection.addEventListener('error', errorListener);\n            connection.addEventListener('message', messageListener);\n        });\n        return this.connection;\n    };\n    SocketChannel.prototype.close = function () {\n        var _this = this;\n        this.logger.debug('Closing connection...');\n        return new Promise(function (resolve, reject) {\n            _this.closed = true;\n            if (_this.connection === undefined) {\n                _this.logger.debug('Connection is not open.');\n                resolve();\n                return;\n            }\n            _this.connection.then(function (connection) {\n                var abortTimer;\n                var abort = function () {\n                    _this.logger.warn('Connection could not be closed within the timeout period.');\n                    reject(new Error('Maximum close timeout reached.'));\n                };\n                var close = function () {\n                    window.clearTimeout(abortTimer);\n                    _this.logger.info('Connection gracefully closed.');\n                    resolve();\n                };\n                connection.addEventListener('close', close, { once: true });\n                connection.close(1000, 'Deliberate disconnection.');\n                abortTimer = window.setTimeout(abort, _this.options.closeTimeout);\n            }, function () {\n                _this.logger.info('Connection closed.');\n                resolve();\n            });\n        });\n    };\n    return SocketChannel;\n}());\nexports.SocketChannel = SocketChannel;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}