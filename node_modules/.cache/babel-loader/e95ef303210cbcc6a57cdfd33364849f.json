{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FunctionType = void 0;\n\nvar schema_1 = require(\"./schema\");\n\nvar violation_1 = require(\"./violation\");\n\nvar FunctionType =\n/** @class */\nfunction () {\n  function FunctionType() {}\n\n  FunctionType.prototype.getTypes = function () {\n    return ['function'];\n  };\n\n  FunctionType.prototype.isValidType = function (value) {\n    return typeof value === 'function';\n  };\n\n  FunctionType.prototype.validate = function (value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!this.isValidType(value)) {\n      throw new schema_1.Violation(\"Expected value of type function at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: 'function'\n      });\n    }\n  };\n\n  return FunctionType;\n}();\n\nexports.FunctionType = FunctionType;","map":{"version":3,"names":["Object","defineProperty","exports","value","FunctionType","schema_1","require","violation_1","prototype","getTypes","isValidType","validate","path","Violation","concat","formatPath","describe","type"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/validation/functionType.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FunctionType = void 0;\nvar schema_1 = require(\"./schema\");\nvar violation_1 = require(\"./violation\");\nvar FunctionType = /** @class */ (function () {\n    function FunctionType() {\n    }\n    FunctionType.prototype.getTypes = function () {\n        return ['function'];\n    };\n    FunctionType.prototype.isValidType = function (value) {\n        return typeof value === 'function';\n    };\n    FunctionType.prototype.validate = function (value, path) {\n        if (path === void 0) { path = []; }\n        if (!this.isValidType(value)) {\n            throw new schema_1.Violation(\"Expected value of type function at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: 'function' });\n        }\n    };\n    return FunctionType;\n}());\nexports.FunctionType = FunctionType;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIF,YAAY;AAAG;AAAe,YAAY;EAC1C,SAASA,YAAT,GAAwB,CACvB;;EACDA,YAAY,CAACI,SAAb,CAAuBC,QAAvB,GAAkC,YAAY;IAC1C,OAAO,CAAC,UAAD,CAAP;EACH,CAFD;;EAGAL,YAAY,CAACI,SAAb,CAAuBE,WAAvB,GAAqC,UAAUP,KAAV,EAAiB;IAClD,OAAO,OAAOA,KAAP,KAAiB,UAAxB;EACH,CAFD;;EAGAC,YAAY,CAACI,SAAb,CAAuBG,QAAvB,GAAkC,UAAUR,KAAV,EAAiBS,IAAjB,EAAuB;IACrD,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,IAAI,CAAC,KAAKF,WAAL,CAAiBP,KAAjB,CAAL,EAA8B;MAC1B,MAAM,IAAIE,QAAQ,CAACQ,SAAb,CAAuB,4CAA4CC,MAA5C,CAAmD,CAAC,GAAGP,WAAW,CAACQ,UAAhB,EAA4BH,IAA5B,CAAnD,EAAsF,YAAtF,EAAoGE,MAApG,CAA2G,CAAC,GAAGP,WAAW,CAACS,QAAhB,EAA0Bb,KAA1B,CAA3G,EAA6I,GAA7I,CAAvB,EAA0KS,IAA1K,EAAgL;QAAEK,IAAI,EAAE;MAAR,CAAhL,CAAN;IACH;EACJ,CALD;;EAMA,OAAOb,YAAP;AACH,CAhBiC,EAAlC;;AAiBAF,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}