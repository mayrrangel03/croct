{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonType = exports.JsonPrimitiveType = exports.JsonArrayType = exports.JsonObjectType = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar schema_1 = require(\"./schema\");\n\nvar violation_1 = require(\"./violation\");\n\nfunction isJsonPrimitive(value) {\n  return value === null || typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number';\n}\n\nfunction isJsonArray(value) {\n  return Array.isArray(value) && value.every(isJsonValue);\n}\n\nfunction isJsonValue(value) {\n  return isJsonPrimitive(value) || isJsonArray(value) || isJsonObject(value);\n}\n\nfunction isJsonObject(value) {\n  return isPlainObject(value) && Object.values(value).every(isJsonValue);\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isPlainObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\nvar JsonObjectType =\n/** @class */\nfunction () {\n  function JsonObjectType(definition) {\n    if (definition === void 0) {\n      definition = {};\n    }\n\n    this.definition = definition;\n  }\n\n  JsonObjectType.prototype.getTypes = function () {\n    return ['object'];\n  };\n\n  JsonObjectType.prototype.isValidType = function (value) {\n    return isPlainObject(value);\n  };\n\n  JsonObjectType.prototype.validate = function (value, path) {\n    var e_1, _a;\n\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!isJsonObject(value)) {\n      throw new schema_1.Violation(\"Expected a JSON object at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: 'object'\n      });\n    }\n\n    if (this.definition.properties === undefined && this.definition.propertyNames === undefined) {\n      return;\n    }\n\n    try {\n      for (var _b = tslib_1.__values(Object.entries(value)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = tslib_1.__read(_c.value, 2),\n            entryName = _d[0],\n            entryValue = _d[1];\n\n        var propertyPath = path.concat([entryName]);\n\n        if (this.definition.propertyNames !== undefined) {\n          this.definition.propertyNames.validate(entryName, propertyPath);\n        }\n\n        if (this.definition.properties !== undefined) {\n          this.definition.properties.validate(entryValue, path.concat([entryName]));\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  return JsonObjectType;\n}();\n\nexports.JsonObjectType = JsonObjectType;\n\nvar JsonArrayType =\n/** @class */\nfunction () {\n  function JsonArrayType(definition) {\n    if (definition === void 0) {\n      definition = {};\n    }\n\n    this.definition = definition;\n  }\n\n  JsonArrayType.prototype.getTypes = function () {\n    return ['array'];\n  };\n\n  JsonArrayType.prototype.isValidType = function (value) {\n    return Array.isArray(value);\n  };\n\n  JsonArrayType.prototype.validate = function (value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!isJsonArray(value)) {\n      throw new schema_1.Violation(\"Expected a JSON array at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: 'array'\n      });\n    }\n\n    if (this.definition.items === undefined) {\n      return;\n    }\n\n    for (var index = 0; index < value.length; index++) {\n      this.definition.items.validate(value[index], path.concat([index.toString()]));\n    }\n  };\n\n  return JsonArrayType;\n}();\n\nexports.JsonArrayType = JsonArrayType;\n\nvar JsonPrimitiveType =\n/** @class */\nfunction () {\n  function JsonPrimitiveType() {}\n\n  JsonPrimitiveType.prototype.getTypes = function () {\n    return ['null', 'number', 'string', 'boolean'];\n  };\n\n  JsonPrimitiveType.prototype.isValidType = function (value) {\n    return isJsonPrimitive(value);\n  };\n\n  JsonPrimitiveType.prototype.validate = function (value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!this.isValidType(value)) {\n      throw new schema_1.Violation(\"Expected a JSON primitive at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: this.getTypes().join('|')\n      });\n    }\n  };\n\n  return JsonPrimitiveType;\n}();\n\nexports.JsonPrimitiveType = JsonPrimitiveType;\n\nvar JsonType =\n/** @class */\nfunction () {\n  function JsonType() {}\n\n  JsonType.prototype.getTypes = function () {\n    return ['null', 'number', 'string', 'boolean', 'array', 'object'];\n  };\n\n  JsonType.prototype.isValidType = function (value) {\n    return isJsonPrimitive(value) || Array.isArray(value) || isPlainObject(value);\n  };\n\n  JsonType.prototype.validate = function (value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!isJsonValue(value)) {\n      throw new schema_1.Violation(\"Expected a JSON value at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: this.getTypes().join('|')\n      });\n    }\n  };\n\n  return JsonType;\n}();\n\nexports.JsonType = JsonType;","map":{"version":3,"names":["Object","defineProperty","exports","value","JsonType","JsonPrimitiveType","JsonArrayType","JsonObjectType","tslib_1","require","schema_1","violation_1","isJsonPrimitive","isJsonArray","Array","isArray","every","isJsonValue","isJsonObject","isPlainObject","values","prototype","toString","call","definition","getTypes","isValidType","validate","path","e_1","_a","Violation","concat","formatPath","describe","type","properties","undefined","propertyNames","_b","__values","entries","_c","next","done","_d","__read","entryName","entryValue","propertyPath","e_1_1","error","return","items","index","length","join"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/validation/jsonType.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonType = exports.JsonPrimitiveType = exports.JsonArrayType = exports.JsonObjectType = void 0;\nvar tslib_1 = require(\"tslib\");\nvar schema_1 = require(\"./schema\");\nvar violation_1 = require(\"./violation\");\nfunction isJsonPrimitive(value) {\n    return value === null || typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number';\n}\nfunction isJsonArray(value) {\n    return Array.isArray(value) && value.every(isJsonValue);\n}\nfunction isJsonValue(value) {\n    return isJsonPrimitive(value) || isJsonArray(value) || isJsonObject(value);\n}\nfunction isJsonObject(value) {\n    return isPlainObject(value) && Object.values(value).every(isJsonValue);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isPlainObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nvar JsonObjectType = /** @class */ (function () {\n    function JsonObjectType(definition) {\n        if (definition === void 0) { definition = {}; }\n        this.definition = definition;\n    }\n    JsonObjectType.prototype.getTypes = function () {\n        return ['object'];\n    };\n    JsonObjectType.prototype.isValidType = function (value) {\n        return isPlainObject(value);\n    };\n    JsonObjectType.prototype.validate = function (value, path) {\n        var e_1, _a;\n        if (path === void 0) { path = []; }\n        if (!isJsonObject(value)) {\n            throw new schema_1.Violation(\"Expected a JSON object at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: 'object' });\n        }\n        if (this.definition.properties === undefined && this.definition.propertyNames === undefined) {\n            return;\n        }\n        try {\n            for (var _b = tslib_1.__values(Object.entries(value)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = tslib_1.__read(_c.value, 2), entryName = _d[0], entryValue = _d[1];\n                var propertyPath = path.concat([entryName]);\n                if (this.definition.propertyNames !== undefined) {\n                    this.definition.propertyNames.validate(entryName, propertyPath);\n                }\n                if (this.definition.properties !== undefined) {\n                    this.definition.properties.validate(entryValue, path.concat([entryName]));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return JsonObjectType;\n}());\nexports.JsonObjectType = JsonObjectType;\nvar JsonArrayType = /** @class */ (function () {\n    function JsonArrayType(definition) {\n        if (definition === void 0) { definition = {}; }\n        this.definition = definition;\n    }\n    JsonArrayType.prototype.getTypes = function () {\n        return ['array'];\n    };\n    JsonArrayType.prototype.isValidType = function (value) {\n        return Array.isArray(value);\n    };\n    JsonArrayType.prototype.validate = function (value, path) {\n        if (path === void 0) { path = []; }\n        if (!isJsonArray(value)) {\n            throw new schema_1.Violation(\"Expected a JSON array at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: 'array' });\n        }\n        if (this.definition.items === undefined) {\n            return;\n        }\n        for (var index = 0; index < value.length; index++) {\n            this.definition.items.validate(value[index], path.concat([index.toString()]));\n        }\n    };\n    return JsonArrayType;\n}());\nexports.JsonArrayType = JsonArrayType;\nvar JsonPrimitiveType = /** @class */ (function () {\n    function JsonPrimitiveType() {\n    }\n    JsonPrimitiveType.prototype.getTypes = function () {\n        return ['null', 'number', 'string', 'boolean'];\n    };\n    JsonPrimitiveType.prototype.isValidType = function (value) {\n        return isJsonPrimitive(value);\n    };\n    JsonPrimitiveType.prototype.validate = function (value, path) {\n        if (path === void 0) { path = []; }\n        if (!this.isValidType(value)) {\n            throw new schema_1.Violation(\"Expected a JSON primitive at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: this.getTypes().join('|') });\n        }\n    };\n    return JsonPrimitiveType;\n}());\nexports.JsonPrimitiveType = JsonPrimitiveType;\nvar JsonType = /** @class */ (function () {\n    function JsonType() {\n    }\n    JsonType.prototype.getTypes = function () {\n        return ['null', 'number', 'string', 'boolean', 'array', 'object'];\n    };\n    JsonType.prototype.isValidType = function (value) {\n        return isJsonPrimitive(value) || Array.isArray(value) || isPlainObject(value);\n    };\n    JsonType.prototype.validate = function (value, path) {\n        if (path === void 0) { path = []; }\n        if (!isJsonValue(value)) {\n            throw new schema_1.Violation(\"Expected a JSON value at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: this.getTypes().join('|') });\n        }\n    };\n    return JsonType;\n}());\nexports.JsonType = JsonType;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}