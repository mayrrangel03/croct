{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectType = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar schema_1 = require(\"./schema\");\n\nvar mixedSchema_1 = require(\"./mixedSchema\");\n\nvar violation_1 = require(\"./violation\");\n\nvar ObjectType =\n/** @class */\nfunction () {\n  function ObjectType(schema) {\n    if (schema === void 0) {\n      schema = {};\n    }\n\n    var _a, _b, _c, _d, _e, _f;\n\n    this.definition = tslib_1.__assign(tslib_1.__assign({}, schema), {\n      properties: (_a = schema.properties) !== null && _a !== void 0 ? _a : {},\n      required: (_b = schema.required) !== null && _b !== void 0 ? _b : [],\n      additionalProperties: (_c = schema.additionalProperties) !== null && _c !== void 0 ? _c : false,\n      propertyNames: (_d = schema.propertyNames) !== null && _d !== void 0 ? _d : new mixedSchema_1.MixedSchema(),\n      minProperties: (_e = schema.minProperties) !== null && _e !== void 0 ? _e : -1,\n      maxProperties: (_f = schema.maxProperties) !== null && _f !== void 0 ? _f : -1\n    });\n  }\n\n  ObjectType.prototype.getTypes = function () {\n    if (this.definition.type !== undefined) {\n      return [this.definition.type.name];\n    }\n\n    return ['object'];\n  }; // eslint-disable-next-line @typescript-eslint/ban-types\n\n\n  ObjectType.prototype.isValidType = function (value) {\n    if (this.definition.type !== undefined) {\n      return value instanceof this.definition.type;\n    }\n\n    return Object.prototype.toString.call(value) === '[object Object]';\n  };\n\n  ObjectType.prototype.validate = function (value, path) {\n    var e_1, _a, e_2, _b;\n\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!this.isValidType(value)) {\n      var _c = tslib_1.__read(this.getTypes(), 1),\n          type = _c[0];\n\n      throw new schema_1.Violation(\"Expected value of type \".concat(type, \" at path '\").concat((0, violation_1.formatPath)(path), \"', \") + \"actual \".concat((0, violation_1.describe)(value), \".\"), path, {\n        type: type\n      });\n    }\n\n    var entries = Object.entries(value);\n    var _d = this.definition,\n        minProperties = _d.minProperties,\n        maxProperties = _d.maxProperties;\n\n    if (minProperties >= 0 && minProperties > entries.length) {\n      throw new schema_1.Violation(\"Expected \".concat(minProperties === maxProperties ? 'exactly' : 'at least', \" \") + \"\".concat(minProperties, \" \").concat(minProperties === 1 ? 'entry' : 'entries', \" \") + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(entries.length, \".\"), path, {\n        limit: minProperties\n      });\n    }\n\n    if (maxProperties >= 0 && maxProperties < entries.length) {\n      throw new schema_1.Violation(\"Expected \".concat(minProperties === maxProperties ? 'exactly' : 'at most', \" \") + \"\".concat(maxProperties, \" \").concat(maxProperties === 1 ? 'entry' : 'entries', \" \") + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(entries.length, \".\"), path, {\n        limit: maxProperties\n      });\n    }\n\n    var additionalProperties = tslib_1.__assign({}, value);\n\n    try {\n      for (var _e = tslib_1.__values(this.definition.required), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var property = _f.value;\n\n        if (!(property in value)) {\n          throw new schema_1.Violation(\"Missing property '\".concat((0, violation_1.formatPath)(path.concat([property])), \"'.\"), path, {\n            required: property\n          });\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    try {\n      for (var entries_1 = tslib_1.__values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {\n        var _g = tslib_1.__read(entries_1_1.value, 2),\n            entryName = _g[0],\n            entryValue = _g[1];\n\n        var propertyPath = path.concat([entryName]);\n        this.definition.propertyNames.validate(entryName, propertyPath);\n        var propertyRule = this.definition.properties[entryName];\n\n        if (propertyRule !== undefined) {\n          propertyRule.validate(entryValue, propertyPath);\n          delete additionalProperties[entryName];\n          continue;\n        }\n\n        if (this.definition.additionalProperties === false) {\n          throw new schema_1.Violation(\"Unknown property '\".concat((0, violation_1.formatPath)(propertyPath), \"'.\"), propertyPath, {\n            additionalProperty: entryName\n          });\n        }\n\n        if (this.definition.additionalProperties !== true) {\n          this.definition.additionalProperties.validate(entryValue, propertyPath);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (entries_1_1 && !entries_1_1.done && (_b = entries_1.return)) _b.call(entries_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var subtypes = this.definition.subtypes;\n\n    if (subtypes !== undefined) {\n      var type = value[subtypes.discriminator];\n\n      if (type !== undefined && subtypes.schemas[type] !== undefined) {\n        subtypes.schemas[type].validate(additionalProperties, path);\n      }\n    }\n  };\n\n  return ObjectType;\n}();\n\nexports.ObjectType = ObjectType;","map":{"version":3,"names":["Object","defineProperty","exports","value","ObjectType","tslib_1","require","schema_1","mixedSchema_1","violation_1","schema","_a","_b","_c","_d","_e","_f","definition","__assign","properties","required","additionalProperties","propertyNames","MixedSchema","minProperties","maxProperties","prototype","getTypes","type","undefined","name","isValidType","toString","call","validate","path","e_1","e_2","__read","Violation","concat","formatPath","describe","entries","length","limit","__values","next","done","property","e_1_1","error","return","entries_1","entries_1_1","_g","entryName","entryValue","propertyPath","propertyRule","additionalProperty","e_2_1","subtypes","discriminator","schemas"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/validation/objectType.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectType = void 0;\nvar tslib_1 = require(\"tslib\");\nvar schema_1 = require(\"./schema\");\nvar mixedSchema_1 = require(\"./mixedSchema\");\nvar violation_1 = require(\"./violation\");\nvar ObjectType = /** @class */ (function () {\n    function ObjectType(schema) {\n        if (schema === void 0) { schema = {}; }\n        var _a, _b, _c, _d, _e, _f;\n        this.definition = tslib_1.__assign(tslib_1.__assign({}, schema), { properties: (_a = schema.properties) !== null && _a !== void 0 ? _a : {}, required: (_b = schema.required) !== null && _b !== void 0 ? _b : [], additionalProperties: (_c = schema.additionalProperties) !== null && _c !== void 0 ? _c : false, propertyNames: (_d = schema.propertyNames) !== null && _d !== void 0 ? _d : new mixedSchema_1.MixedSchema(), minProperties: (_e = schema.minProperties) !== null && _e !== void 0 ? _e : -1, maxProperties: (_f = schema.maxProperties) !== null && _f !== void 0 ? _f : -1 });\n    }\n    ObjectType.prototype.getTypes = function () {\n        if (this.definition.type !== undefined) {\n            return [this.definition.type.name];\n        }\n        return ['object'];\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    ObjectType.prototype.isValidType = function (value) {\n        if (this.definition.type !== undefined) {\n            return value instanceof this.definition.type;\n        }\n        return Object.prototype.toString.call(value) === '[object Object]';\n    };\n    ObjectType.prototype.validate = function (value, path) {\n        var e_1, _a, e_2, _b;\n        if (path === void 0) { path = []; }\n        if (!this.isValidType(value)) {\n            var _c = tslib_1.__read(this.getTypes(), 1), type = _c[0];\n            throw new schema_1.Violation(\"Expected value of type \".concat(type, \" at path '\").concat((0, violation_1.formatPath)(path), \"', \")\n                + \"actual \".concat((0, violation_1.describe)(value), \".\"), path, { type: type });\n        }\n        var entries = Object.entries(value);\n        var _d = this.definition, minProperties = _d.minProperties, maxProperties = _d.maxProperties;\n        if (minProperties >= 0 && minProperties > entries.length) {\n            throw new schema_1.Violation(\"Expected \".concat(minProperties === maxProperties ? 'exactly' : 'at least', \" \")\n                + \"\".concat(minProperties, \" \").concat(minProperties === 1 ? 'entry' : 'entries', \" \")\n                + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(entries.length, \".\"), path, { limit: minProperties });\n        }\n        if (maxProperties >= 0 && maxProperties < entries.length) {\n            throw new schema_1.Violation(\"Expected \".concat(minProperties === maxProperties ? 'exactly' : 'at most', \" \")\n                + \"\".concat(maxProperties, \" \").concat(maxProperties === 1 ? 'entry' : 'entries', \" \")\n                + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(entries.length, \".\"), path, { limit: maxProperties });\n        }\n        var additionalProperties = tslib_1.__assign({}, value);\n        try {\n            for (var _e = tslib_1.__values(this.definition.required), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var property = _f.value;\n                if (!(property in value)) {\n                    throw new schema_1.Violation(\"Missing property '\".concat((0, violation_1.formatPath)(path.concat([property])), \"'.\"), path, {\n                        required: property,\n                    });\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var entries_1 = tslib_1.__values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {\n                var _g = tslib_1.__read(entries_1_1.value, 2), entryName = _g[0], entryValue = _g[1];\n                var propertyPath = path.concat([entryName]);\n                this.definition.propertyNames.validate(entryName, propertyPath);\n                var propertyRule = this.definition.properties[entryName];\n                if (propertyRule !== undefined) {\n                    propertyRule.validate(entryValue, propertyPath);\n                    delete additionalProperties[entryName];\n                    continue;\n                }\n                if (this.definition.additionalProperties === false) {\n                    throw new schema_1.Violation(\"Unknown property '\".concat((0, violation_1.formatPath)(propertyPath), \"'.\"), propertyPath, {\n                        additionalProperty: entryName,\n                    });\n                }\n                if (this.definition.additionalProperties !== true) {\n                    this.definition.additionalProperties.validate(entryValue, propertyPath);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (entries_1_1 && !entries_1_1.done && (_b = entries_1.return)) _b.call(entries_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var subtypes = this.definition.subtypes;\n        if (subtypes !== undefined) {\n            var type = value[subtypes.discriminator];\n            if (type !== undefined && subtypes.schemas[type] !== undefined) {\n                subtypes.schemas[type].validate(additionalProperties, path);\n            }\n        }\n    };\n    return ObjectType;\n}());\nexports.ObjectType = ObjectType;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}