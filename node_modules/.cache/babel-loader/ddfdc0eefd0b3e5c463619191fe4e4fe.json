{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanType = void 0;\n\nvar schema_1 = require(\"./schema\");\n\nvar violation_1 = require(\"./violation\");\n\nvar BooleanType =\n/** @class */\nfunction () {\n  function BooleanType() {}\n\n  BooleanType.prototype.getTypes = function () {\n    return ['boolean'];\n  };\n\n  BooleanType.prototype.isValidType = function (value) {\n    return typeof value === 'boolean';\n  };\n\n  BooleanType.prototype.validate = function (value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!this.isValidType(value)) {\n      throw new schema_1.Violation(\"Expected value of type boolean at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: 'boolean'\n      });\n    }\n  };\n\n  return BooleanType;\n}();\n\nexports.BooleanType = BooleanType;","map":{"version":3,"names":["Object","defineProperty","exports","value","BooleanType","schema_1","require","violation_1","prototype","getTypes","isValidType","validate","path","Violation","concat","formatPath","describe","type"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/validation/booleanType.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanType = void 0;\nvar schema_1 = require(\"./schema\");\nvar violation_1 = require(\"./violation\");\nvar BooleanType = /** @class */ (function () {\n    function BooleanType() {\n    }\n    BooleanType.prototype.getTypes = function () {\n        return ['boolean'];\n    };\n    BooleanType.prototype.isValidType = function (value) {\n        return typeof value === 'boolean';\n    };\n    BooleanType.prototype.validate = function (value, path) {\n        if (path === void 0) { path = []; }\n        if (!this.isValidType(value)) {\n            throw new schema_1.Violation(\"Expected value of type boolean at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: 'boolean' });\n        }\n    };\n    return BooleanType;\n}());\nexports.BooleanType = BooleanType;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIF,WAAW;AAAG;AAAe,YAAY;EACzC,SAASA,WAAT,GAAuB,CACtB;;EACDA,WAAW,CAACI,SAAZ,CAAsBC,QAAtB,GAAiC,YAAY;IACzC,OAAO,CAAC,SAAD,CAAP;EACH,CAFD;;EAGAL,WAAW,CAACI,SAAZ,CAAsBE,WAAtB,GAAoC,UAAUP,KAAV,EAAiB;IACjD,OAAO,OAAOA,KAAP,KAAiB,SAAxB;EACH,CAFD;;EAGAC,WAAW,CAACI,SAAZ,CAAsBG,QAAtB,GAAiC,UAAUR,KAAV,EAAiBS,IAAjB,EAAuB;IACpD,IAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;MAAEA,IAAI,GAAG,EAAP;IAAY;;IACnC,IAAI,CAAC,KAAKF,WAAL,CAAiBP,KAAjB,CAAL,EAA8B;MAC1B,MAAM,IAAIE,QAAQ,CAACQ,SAAb,CAAuB,2CAA2CC,MAA3C,CAAkD,CAAC,GAAGP,WAAW,CAACQ,UAAhB,EAA4BH,IAA5B,CAAlD,EAAqF,YAArF,EAAmGE,MAAnG,CAA0G,CAAC,GAAGP,WAAW,CAACS,QAAhB,EAA0Bb,KAA1B,CAA1G,EAA4I,GAA5I,CAAvB,EAAyKS,IAAzK,EAA+K;QAAEK,IAAI,EAAE;MAAR,CAA/K,CAAN;IACH;EACJ,CALD;;EAMA,OAAOb,WAAP;AACH,CAhBgC,EAAjC;;AAiBAF,OAAO,CAACE,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}