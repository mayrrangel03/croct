{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NumberType = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar schema_1 = require(\"./schema\");\n\nvar violation_1 = require(\"./violation\");\n\nvar NumberType =\n/** @class */\nfunction () {\n  function NumberType(definition) {\n    if (definition === void 0) {\n      definition = {};\n    }\n\n    var _a, _b, _c;\n\n    this.definition = tslib_1.__assign(tslib_1.__assign({}, definition), {\n      integer: (_a = definition.integer) !== null && _a !== void 0 ? _a : false,\n      minimum: (_b = definition.minimum) !== null && _b !== void 0 ? _b : Number.NEGATIVE_INFINITY,\n      maximum: (_c = definition.maximum) !== null && _c !== void 0 ? _c : Number.POSITIVE_INFINITY\n    });\n  }\n\n  NumberType.prototype.getTypes = function () {\n    return [this.definition.integer ? 'integer' : 'number'];\n  };\n\n  NumberType.prototype.isValidType = function (value) {\n    return typeof value === 'number' && (!this.definition.integer || Number.isInteger(value));\n  };\n\n  NumberType.prototype.validate = function (value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (!this.isValidType(value)) {\n      var type = this.getTypes()[0];\n      throw new schema_1.Violation(\"Expected value of type \".concat(type, \" at path '\").concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, {\n        type: type\n      });\n    }\n\n    if (value < this.definition.minimum) {\n      throw new schema_1.Violation(\"Expected a value greater than or equal to \".concat(this.definition.minimum, \" \") + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(value, \".\"), path, {\n        limit: this.definition.minimum\n      });\n    }\n\n    if (value > this.definition.maximum) {\n      throw new schema_1.Violation(\"Expected a value less than or equal to \".concat(this.definition.maximum, \" \") + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(value, \".\"), path, {\n        limit: this.definition.maximum\n      });\n    }\n  };\n\n  return NumberType;\n}();\n\nexports.NumberType = NumberType;","map":{"version":3,"names":["Object","defineProperty","exports","value","NumberType","tslib_1","require","schema_1","violation_1","definition","_a","_b","_c","__assign","integer","minimum","Number","NEGATIVE_INFINITY","maximum","POSITIVE_INFINITY","prototype","getTypes","isValidType","isInteger","validate","path","type","Violation","concat","formatPath","describe","limit"],"sources":["C:/Users/User/croct/node_modules/@croct/sdk/validation/numberType.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberType = void 0;\nvar tslib_1 = require(\"tslib\");\nvar schema_1 = require(\"./schema\");\nvar violation_1 = require(\"./violation\");\nvar NumberType = /** @class */ (function () {\n    function NumberType(definition) {\n        if (definition === void 0) { definition = {}; }\n        var _a, _b, _c;\n        this.definition = tslib_1.__assign(tslib_1.__assign({}, definition), { integer: (_a = definition.integer) !== null && _a !== void 0 ? _a : false, minimum: (_b = definition.minimum) !== null && _b !== void 0 ? _b : Number.NEGATIVE_INFINITY, maximum: (_c = definition.maximum) !== null && _c !== void 0 ? _c : Number.POSITIVE_INFINITY });\n    }\n    NumberType.prototype.getTypes = function () {\n        return [this.definition.integer ? 'integer' : 'number'];\n    };\n    NumberType.prototype.isValidType = function (value) {\n        return typeof value === 'number' && (!this.definition.integer || Number.isInteger(value));\n    };\n    NumberType.prototype.validate = function (value, path) {\n        if (path === void 0) { path = []; }\n        if (!this.isValidType(value)) {\n            var type = this.getTypes()[0];\n            throw new schema_1.Violation(\"Expected value of type \".concat(type, \" at path '\").concat((0, violation_1.formatPath)(path), \"', actual \").concat((0, violation_1.describe)(value), \".\"), path, { type: type });\n        }\n        if (value < this.definition.minimum) {\n            throw new schema_1.Violation(\"Expected a value greater than or equal to \".concat(this.definition.minimum, \" \")\n                + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(value, \".\"), path, { limit: this.definition.minimum });\n        }\n        if (value > this.definition.maximum) {\n            throw new schema_1.Violation(\"Expected a value less than or equal to \".concat(this.definition.maximum, \" \")\n                + \"at path '\".concat((0, violation_1.formatPath)(path), \"', actual \").concat(value, \".\"), path, { limit: this.definition.maximum });\n        }\n    };\n    return NumberType;\n}());\nexports.NumberType = NumberType;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}